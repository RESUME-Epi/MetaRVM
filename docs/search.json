[{"path":"https://RESUME-Epi.github.io/MetaRVM/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 MetaRVM authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/articles/getting-started.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting Started with MetaRVM","text":"MetaRVM comprehensive R package simulating respiratory virus epidemics using meta-population compartmental models. vignette guide basic usage package.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/articles/getting-started.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Getting Started with MetaRVM","text":"can install development version MetaRVM GitHub:","code":"# install.packages(\"devtools\") devtools::install_github(\"RESUME-Epi/MetaRVM\")"},{"path":"https://RESUME-Epi.github.io/MetaRVM/articles/getting-started.html","id":"loading-the-package","dir":"Articles","previous_headings":"","what":"Loading the Package","title":"Getting Started with MetaRVM","text":"","code":"library(MetaRVM) library(ggplot2)"},{"path":"https://RESUME-Epi.github.io/MetaRVM/articles/getting-started.html","id":"basic-example","dir":"Articles","previous_headings":"","what":"Basic Example","title":"Getting Started with MetaRVM","text":"example shows run basic meta-population simulation. metaRVM package includes set example files extdata directory. run example, first need locate files. system.file() function R recommended way , find files wherever package installed. yaml_file variable now holds full path example configuration file. file set use example data files (also extdata directory) relative paths. content yaml file. detailed explanation configuration options, please see Model Configurations vignette.","code":"# Locate the example YAML configuration file yaml_file <- system.file(\"extdata\", \"example_config.yaml\", package = \"MetaRVM\") print(yaml_file) #> [1] \"/tmp/RtmpEkEVxi/temp_libpath24fd71564241d1/MetaRVM/extdata/example_config.yaml\" run_id: ExampleRun population_data:   mapping: demographic_mapping_n24.csv   initialization: population_init_n24.csv   vaccination: vaccination_n24.csv mixing_matrix:   weekday_day: m_weekday_day.csv   weekday_night: m_weekday_night.csv   weekend_day: m_weekend_day.csv   weekend_night: m_weekend_night.csv disease_params:   ts: 0.5   tv: 0.25   ve: 0.4   dv: 180   dp: 1   de: 3   da: 5   ds: 6   dh: 8   dr: 180   pea: 0.3   psr: 0.95   phr: 0.97 simulation_config:   start_date: 01/01/2024 # m/d/Y   length: 150   nsim: 1"},{"path":"https://RESUME-Epi.github.io/MetaRVM/articles/getting-started.html","id":"running-the-simulation","dir":"Articles","previous_headings":"","what":"Running the Simulation","title":"Getting Started with MetaRVM","text":"path configuration file, simulation can run using metaRVM() function. details running metaRVM, refer Running Simulation vignette.","code":"# Load the metaRVM library library(MetaRVM)  # Run the simulation sim_out <- metaRVM(yaml_file) #> Loading required namespace: pkgbuild #> Generating model in c #> ℹ Re-compiling odin1b45cb2c (debug build) #> ℹ Loading odin1b45cb2c print(sim_out) #> MetaRVM Results Object #> ===================== #> Instances: 1  #> Populations: 24  #> Date range: 2024-01-01 to 2024-05-29  #> Total observations: 111600  #> Disease states: D, E, H, I_all, I_asymp, I_eff, I_presymp, I_symp, P, R, S, V, cum_V, mob_pop, n_EI, n_EIpresymp, n_HD, n_HR, n_HRD, n_IasympR, n_IsympH, n_IsympR, n_IsympRH, n_SE, n_SV, n_VE, n_VS, n_preIsymp, p_HRD, p_SE, p_VE head(sim_out$results) #>          date    age   race   zone disease_state        value instance #>        <Date> <char> <char> <char>        <char>        <num>    <int> #> 1: 2024-01-01   0-17      A     11             D 2.252583e-04        1 #> 2: 2024-01-01   0-17      A     11             E 1.367164e+01        1 #> 3: 2024-01-01   0-17      A     11             H 2.304447e-01        1 #> 4: 2024-01-01   0-17      A     11         I_all 2.852138e+01        1 #> 5: 2024-01-01   0-17      A     11       I_asymp 3.228552e-01        1 #> 6: 2024-01-01   0-17      A     11         I_eff 2.762196e+01        1"},{"path":"https://RESUME-Epi.github.io/MetaRVM/articles/running-a-simulation.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Running a Simulation with metaRVM","text":"vignette demonstrates run metaRVM simulation using example configuration data files included package. good way get started understand basic workflow.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/articles/running-a-simulation.html","id":"locating-the-example-files","dir":"Articles","previous_headings":"","what":"Locating the Example Files","title":"Running a Simulation with metaRVM","text":"metaRVM package includes set example files extdata directory. run example, first need locate files. system.file() function R recommended way , find files wherever package installed. yaml_file variable now holds full path example configuration file. file set use example data files (also extdata directory) relative paths. content yaml file.","code":"# Locate the example YAML configuration file yaml_file <- system.file(\"extdata\", \"example_config.yaml\", package = \"MetaRVM\") print(yaml_file) #> [1] \"/tmp/RtmpEkEVxi/temp_libpath24fd71564241d1/MetaRVM/extdata/example_config.yaml\" run_id: ExampleRun population_data:   mapping: demographic_mapping_n24.csv   initialization: population_init_n24.csv   vaccination: vaccination_n24.csv mixing_matrix:   weekday_day: m_weekday_day.csv   weekday_night: m_weekday_night.csv   weekend_day: m_weekend_day.csv   weekend_night: m_weekend_night.csv disease_params:   ts: 0.5   tv: 0.25   ve: 0.4   dv: 180   dp: 1   de: 3   da: 5   ds: 6   dh: 8   dr: 180   pea: 0.3   psr: 0.95   phr: 0.97 simulation_config:   start_date: 01/01/2024 # m/d/Y   length: 150   nsim: 1"},{"path":"https://RESUME-Epi.github.io/MetaRVM/articles/running-a-simulation.html","id":"running-the-simulation","dir":"Articles","previous_headings":"","what":"Running the Simulation","title":"Running a Simulation with metaRVM","text":"path configuration file, simulation can run using metaRVM() function. metaRVM() function parse YAML file, read associated data files, run simulation, return MetaRVMResults object.","code":"# Load the metaRVM library library(MetaRVM)  # Run the simulation sim_out <- metaRVM(yaml_file) #> Loading required namespace: pkgbuild #> Generating model in c #> ℹ Re-compiling odin1b45cb2c (debug build) #> ℹ Loading odin1b45cb2c"},{"path":[]},{"path":"https://RESUME-Epi.github.io/MetaRVM/articles/running-a-simulation.html","id":"working-with-configuration-files","dir":"Articles","previous_headings":"Running the Simulation > Deep-dive into MetaRVM Classes","what":"Working with Configuration Files","title":"Running a Simulation with metaRVM","text":"simulation can run directly providing YAML configuration file path, creating MetaRVMConfig object.","code":"# Load configuration from YAML file config_obj <- MetaRVMConfig$new(yaml_file)  # Examine the configuration config_obj #> MetaRVM Configuration Object #> ============================ #> Config file: /tmp/RtmpEkEVxi/temp_libpath24fd71564241d1/MetaRVM/extdata/example_config.yaml  #> Parameters: 40  #> Parameter names (first 10): N_pop, pop_map, S_ini, E_ini, I_asymp_ini, I_presymp_ini, I_symp_ini, H_ini, D_ini, P_ini ... #> Population groups: 24  #> Start date: 2023-12-31  #> Population mapping: [ 24 rows x 4 columns]"},{"path":"https://RESUME-Epi.github.io/MetaRVM/articles/running-a-simulation.html","id":"exploring-configuration-parameters","dir":"Articles","previous_headings":"Running the Simulation > Deep-dive into MetaRVM Classes","what":"Exploring Configuration Parameters","title":"Running a Simulation with metaRVM","text":"MetaRVMConfig class provides several methods explore simulation arguments:","code":"# List all available parameters param_names <- config_obj$list_parameters() head(param_names, 10) #>  [1] \"N_pop\"         \"pop_map\"       \"S_ini\"         \"E_ini\"         #>  [5] \"I_asymp_ini\"   \"I_presymp_ini\" \"I_symp_ini\"    \"H_ini\"         #>  [9] \"D_ini\"         \"P_ini\"  # Get a summary of parameter types and sizes param_summary <- config_obj$parameter_summary() head(param_summary, 10) #>                   parameter       type length size #> N_pop                 N_pop    integer      1    1 #> pop_map             pop_map data.table      4    4 #> S_ini                 S_ini    integer     24   24 #> E_ini                 E_ini    numeric     24   24 #> I_asymp_ini     I_asymp_ini    numeric     24   24 #> I_presymp_ini I_presymp_ini    numeric     24   24 #> I_symp_ini       I_symp_ini    integer     24   24 #> H_ini                 H_ini    numeric     24   24 #> D_ini                 D_ini    numeric     24   24 #> P_ini                 P_ini    integer     24   24"},{"path":"https://RESUME-Epi.github.io/MetaRVM/articles/running-a-simulation.html","id":"accessing-demographic-information","dir":"Articles","previous_headings":"Running the Simulation > Deep-dive into MetaRVM Classes","what":"Accessing Demographic Information","title":"Running a Simulation with metaRVM","text":"One MetaRVM’s key features demographic stratification, ’s ability define parameters specific demographic strata.","code":"# Get demographic categories age_categories <- config_obj$get_age_categories() race_categories <- config_obj$get_race_categories() zones <- config_obj$get_zones()  cat(\"Age categories:\", paste(age_categories, collapse = \", \"), \"\\n\") #> Age categories: 0-17, 18-64, 65+ cat(\"Race categories:\", paste(race_categories, collapse = \", \"), \"\\n\") #> Race categories: A, B, C, D cat(\"Geographic zones:\", paste(zones, collapse = \", \"), \"\\n\") #> Geographic zones: 11, 22"},{"path":"https://RESUME-Epi.github.io/MetaRVM/articles/running-a-simulation.html","id":"alternative-ways-to-run-the-simulation","dir":"Articles","previous_headings":"Running the Simulation > Deep-dive into MetaRVM Classes","what":"Alternative Ways to Run the Simulation","title":"Running a Simulation with metaRVM","text":"","code":"# Method 1: Direct from file path # sim_out <- metaRVM(config_file)  # Method 2: From MetaRVMConfig object sim_out <- metaRVM(config_obj) #> Generating model in c #> Using cached model  # Method 3: From parsed configuration list config_list <- parse_config(yaml_file) sim_out <- metaRVM(config_list) #> Generating model in c #> Using cached model"},{"path":"https://RESUME-Epi.github.io/MetaRVM/articles/running-a-simulation.html","id":"exploring-the-results","dir":"Articles","previous_headings":"Running the Simulation","what":"Exploring the Results","title":"Running a Simulation with metaRVM","text":"metaRVM() function returns MetaRVMResults object formatted, analysis-ready data. results formatted calendar dates demographic attributes, stored data frame called results:","code":"# Look at the structure of formatted results head(sim_out$results) #>          date    age   race   zone disease_state        value instance #>        <Date> <char> <char> <char>        <char>        <num>    <int> #> 1: 2024-01-01   0-17      A     11             D 2.252583e-04        1 #> 2: 2024-01-01   0-17      A     11             E 1.367164e+01        1 #> 3: 2024-01-01   0-17      A     11             H 2.304447e-01        1 #> 4: 2024-01-01   0-17      A     11         I_all 2.852138e+01        1 #> 5: 2024-01-01   0-17      A     11       I_asymp 3.228552e-01        1 #> 6: 2024-01-01   0-17      A     11         I_eff 2.762196e+01        1  # Check unique values for key variables cat(\"Disease states:\", paste(unique(sim_out$results$disease_state), collapse = \", \"), \"\\n\") #> Disease states: D, E, H, I_all, I_asymp, I_eff, I_presymp, I_symp, P, R, S, V, cum_V, mob_pop, n_EI, n_EIpresymp, n_HD, n_HR, n_HRD, n_IasympR, n_IsympH, n_IsympR, n_IsympRH, n_SE, n_SV, n_VE, n_VS, n_preIsymp, p_HRD, p_SE, p_VE cat(\"Date range:\", paste(range(sim_out$results$date), collapse = \" to \"), \"\\n\") #> Date range: 2024-01-01 to 2024-05-29"},{"path":"https://RESUME-Epi.github.io/MetaRVM/articles/running-a-simulation.html","id":"data-subsetting-and-filtering","dir":"Articles","previous_headings":"Running the Simulation > Exploring the Results","what":"Data Subsetting and Filtering","title":"Running a Simulation with metaRVM","text":"subset_data() method provides flexible filtering across demographic temporal dimensions. returns object class MetaRVMResults.","code":"# Subset by single criteria hospitalized_data <- sim_out$subset_data(disease_states = \"H\") hospitalized_data$results #>             date    age   race   zone disease_state      value instance #>           <Date> <char> <char> <char>        <char>      <num>    <int> #>    1: 2024-01-01   0-17      A     11             H  0.2304447        1 #>    2: 2024-01-01   0-17      B     11             H  0.5203590        1 #>    3: 2024-01-01   0-17      C     11             H  0.6244308        1 #>    4: 2024-01-01   0-17      D     11             H  1.4867401        1 #>    5: 2024-01-01  18-64      A     11             H  0.3047817        1 #>   ---                                                                   #> 3596: 2024-05-29  18-64      D     22             H  3.2251475        1 #> 3597: 2024-05-29    65+      A     22             H  1.1211406        1 #> 3598: 2024-05-29    65+      B     22             H  1.9258376        1 #> 3599: 2024-05-29    65+      C     22             H 11.1336062        1 #> 3600: 2024-05-29    65+      D     22             H 12.6463102        1  # Subset by multiple demographic categories elderly_data <- sim_out$subset_data(   age = c(\"65+\"),   disease_states = c(\"H\", \"D\") ) elderly_data$results #>             date    age   race   zone disease_state        value instance #>           <Date> <char> <char> <char>        <char>        <num>    <int> #>    1: 2024-01-01    65+      A     11             D 2.179919e-05        1 #>    2: 2024-01-01    65+      A     11             H 2.230110e-02        1 #>    3: 2024-01-01    65+      B     11             D 8.719675e-05        1 #>    4: 2024-01-01    65+      B     11             H 8.920441e-02        1 #>    5: 2024-01-01    65+      C     11             D 8.719675e-05        1 #>   ---                                                                     #> 2396: 2024-05-29    65+      B     22             H 1.925838e+00        1 #> 2397: 2024-05-29    65+      C     22             D 7.241413e+01        1 #> 2398: 2024-05-29    65+      C     22             H 1.113361e+01        1 #> 2399: 2024-05-29    65+      D     22             D 8.622148e+01        1 #> 2400: 2024-05-29    65+      D     22             H 1.264631e+01        1  # Specific date range peak_period <- sim_out$subset_data(   date_range = c(as.Date(\"2023-10-01\"), as.Date(\"2023-12-31\")),   disease_states = \"H\" ) peak_period$results #> Empty data.table (0 rows and 7 cols): date,age,race,zone,disease_state,value..."},{"path":"https://RESUME-Epi.github.io/MetaRVM/articles/running-a-simulation.html","id":"specifying-disease-parameter-via-distributions","dir":"Articles","previous_headings":"","what":"Specifying Disease Parameter via Distributions","title":"Running a Simulation with metaRVM","text":"metaRVM allows disease parameters specified distributions, useful capturing uncertainty. parameter defined distribution, simulation instance draw new value distribution. details available distributions parameters, refer yaml-configuration vignette. example YAML file parameter distributions included package, example_config_dist.yaml. content: run simulation configuration, pass file path metaRVM.","code":"# Locate the example YAML configuration file with distributions yaml_file_dist <- system.file(\"extdata\", \"example_config_dist.yaml\", package = \"MetaRVM\") run_id: ExampleRun_Dist population_data:   mapping: demographic_mapping_n24.csv   initialization: population_init_n24.csv   vaccination: vaccination_n24.csv mixing_matrix:   weekday_day: m_weekday_day.csv   weekday_night: m_weekday_night.csv   weekend_day: m_weekend_day.csv   weekend_night: m_weekend_night.csv disease_params:   ts: 0.5   tv: 0.25   ve:      dist: uniform     min: 0.3     max: 0.5   dv: 180   dp: 1   de: 3   da:      dist: uniform     min: 4     max: 6   ds:      dist: uniform     min: 5     max: 7   dh:      dist: lognormal     mu: 2     sd: 0.5   dr: 180   pea: 0.3   psr: 0.95   phr: 0.97 simulation_config:   start_date: 01/01/2024 # m/d/Y   length: 150   nsim: 20 # Increased nsim for meaningful summary statistics # Run the simulation with the new configuration sim_out_dist <- metaRVM(yaml_file_dist)"},{"path":"https://RESUME-Epi.github.io/MetaRVM/articles/running-a-simulation.html","id":"generating-summary-statistics-across-demographics","dir":"Articles","previous_headings":"Specifying Disease Parameter via Distributions","what":"Generating Summary Statistics across Demographics","title":"Running a Simulation with metaRVM","text":"MetaRVMResults class provides basic summarization functionality across multiple instances simulation, one disease parameters specified via distribution, one simulations per configurations. summarize method generates output class MetaRVMSummary plot method available use. Now run simulation parameter distributions, can use summarize method see variability results.","code":"library(ggplot2)  # Summarize hospitalizations by age group hospital_summary_dist <- sim_out_dist$summarize(   group_by = c(\"age\"),   disease_states = \"n_IsympH\",   stats = c(\"median\", \"quantile\"),   quantiles = c(0.05, 0.95) )  # Plot the summary hospital_summary_dist$plot() + ggtitle(\"Daily Hospitalizations by Age Group (with 90% confidence interval)\") + theme_bw() # Summary of hospitalizations by age and race group hospital_summary <- sim_out_dist$summarize(   group_by = c(\"age\", \"race\"),   disease_states = \"n_IsympH\",   stats = c(\"median\", \"quantile\"),   quantiles = c(0.05, 0.95) ) hospital_summary #> MetaRVM Summary Object #> ====================== #> Data type: summary  #> Observations: 1800  #> Grouped by: age, race  #> Disease states: n_IsympH  #> Date range: 2024-01-01 to 2024-05-29  #> Summary statistics: median_value, q05, q95  # visualize the summary hospital_summary$plot() + ggtitle(\"Daily Hospitalizations by Age and Race\") + theme_bw()"},{"path":"https://RESUME-Epi.github.io/MetaRVM/articles/running-a-simulation.html","id":"specifying-disease-parameters-by-demographics","dir":"Articles","previous_headings":"","what":"Specifying Disease Parameters by Demographics","title":"Running a Simulation with metaRVM","text":"disease parameters can also specified different demographic subgroups. subgroup-specific parameters override global parameters. details, refer yaml-configuration vignette. example YAML file provided, example_config_subgroup_dist.yaml, demonstrates feature. also includes parameters defined distributions. Now, let’s run simulation configuration. can now plot results see impact subgroup-specific parameters. example, can compare number hospitalizations “65+” age group, dh 10, age groups use global dh drawn lognormal distribution.","code":"# Locate the example YAML configuration file with subgroup parameters yaml_file_subgroup <- system.file(\"extdata\", \"example_config_subgroup_dist.yaml\", package = \"MetaRVM\") run_id: ExampleRun_Subgroup_Dist population_data:   mapping: demographic_mapping_n24.csv   initialization: population_init_n24.csv   vaccination: vaccination_n24.csv mixing_matrix:   weekday_day: m_weekday_day.csv   weekday_night: m_weekday_night.csv   weekend_day: m_weekend_day.csv   weekend_night: m_weekend_night.csv disease_params:   ts: 0.5   tv: 0.25   ve:      dist: uniform     min: 0.3     max: 0.5   dv: 180   dp: 1   de: 3   da: 5   ds: 6   dh:      dist: lognormal     mu: 2     sd: 0.5   dr: 180   pea: 0.3   psr: 0.95   phr: 0.97 sub_disease_params:     age:       0-17:         pea: 0.08       18-64:         ts: 0.6       65+:         # This fixed value will override the global lognormal distribution for dh         dh: 10          phr: 0.9227 simulation_config:   start_date: 01/01/2024 # m/d/Y   length: 150   nsim: 20 # Run the simulation with the subgroup configuration sim_out_subgroup <- metaRVM(yaml_file_subgroup) # Summarize hospitalizations by age group hospital_summary_subgroup <- sim_out_subgroup$summarize(   group_by = c(\"age\"),   disease_states = \"H\",   stats = c(\"median\", \"quantile\"),   quantiles = c(0.025, 0.975) )  # Plot the summary hospital_summary_subgroup$plot() + ggtitle(\"Daily Hospitalizations by Age Group (Subgroup Parameters)\") + theme_bw()"},{"path":"https://RESUME-Epi.github.io/MetaRVM/articles/yaml-configuration.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"YAML Configuration for metaRVM","text":"metaRVM package uses YAML file configure model parameters. vignette describes structure YAML configuration file, starting simple example progressively introducing advanced features.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/articles/yaml-configuration.html","id":"basic-configuration","dir":"Articles","previous_headings":"","what":"Basic Configuration","title":"YAML Configuration for metaRVM","text":"minimal configuration file specifies data sources, simulation settings, disease parameters fixed scalar values.","code":"run_id: SimpleRun population_data:   mapping: data/demographic_mapping.csv   initialization: data/population_init.csv   vaccination: data/vaccination.csv mixing_matrix:   weekday_day: data/m_weekday_day.csv   weekday_night: data/m_weekday_night.csv   weekend_day: data/m_weekend_day.csv   weekend_night: data/m_weekend_night.csv disease_params:   ts: 0.5   tv: 0.25   ve: 0.4   dv: 180   dp: 1   de: 3   da: 5   ds: 6   dh: 8   dr: 180   pea: 0.3   psr: 0.95   phr: 0.97 simulation_config:   start_date: 01/01/2025 # m/d/Y   length: 90   nsim: 1   random_seed: 42"},{"path":"https://RESUME-Epi.github.io/MetaRVM/articles/yaml-configuration.html","id":"configuration-sections","dir":"Articles","previous_headings":"Basic Configuration","what":"Configuration Sections","title":"YAML Configuration for metaRVM","text":"run_id: unique name simulation. population_data: Paths CSV files population demographics, initial state, vaccination schedules. mixing_matrix: Paths CSV files defining contact patterns different times week. disease_params: Disease characteristics. example, parameters single, fixed values. simulation_config: Settings simulation run, start date, duration, number simulations.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/articles/yaml-configuration.html","id":"input-file-structures","dir":"Articles","previous_headings":"Basic Configuration","what":"Input File Structures","title":"YAML Configuration for metaRVM","text":"metaRVM package requires several CSV files structured specific way. descriptions required input files.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/articles/yaml-configuration.html","id":"population-data-files","dir":"Articles","previous_headings":"Basic Configuration > Input File Structures","what":"Population Data Files","title":"YAML Configuration for metaRVM","text":"population_id: unique identifier subpopulation, set natural numbers 1, 2, 3, … age: age group subpopulation (e.g., “0-4”, “65+”). race: race ethnicity subpopulation. hcez: healthcare zone geographic region subpopulation. N: total number individuals subpopulation. S0: initial number susceptible individuals. I0: initial number symptomatic infected individuals. V0: initial number vaccinated individuals. R0: initial number recovered individuals. vaccination: vaccination schedule file contains number vaccinations administered time. first column must date MM/DD/YYYY format, followed columns subpopulation order assigned population_id mapping file.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/articles/yaml-configuration.html","id":"mixing-matrix-files","dir":"Articles","previous_headings":"Basic Configuration > Input File Structures","what":"Mixing Matrix Files","title":"YAML Configuration for metaRVM","text":"mixing matrix files define contact patterns different subpopulations. file CSV without header, rows columns correspond subpopulations order population mapping file. values matrix represent proportion time individuals one subpopulation spend individuals another. sum row must equal 1.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/articles/yaml-configuration.html","id":"disease-parameter-descriptions","dir":"Articles","previous_headings":"Basic Configuration","what":"Disease Parameter Descriptions","title":"YAML Configuration for metaRVM","text":"list disease parameters used metaRVM: ts: Transmission rate symptomatic individuals susceptible population. tv: Transmission rate symptomatic individuals vaccinated population. ve: Vaccine effectiveness (proportion, range: [0, 1]). dv: Mean duration (days) vaccinated state immunity wanes. dp: Mean duration (days) presymptomatic infectious state. de: Mean duration (days) exposed state. da: Mean duration (days) asymptomatic infectious state. ds: Mean duration (days) symptomatic infectious state. dh: Mean duration (days) hospitalized state. dr: Mean duration (days) immunity recovered state. pea: Proportion exposed individuals become asymptomatic (vs. presymptomatic) (range: 0-1). psr: Proportion symptomatic individuals recover directly (vs. requiring hospitalization) (range: 0-1). phr: Proportion hospitalized individuals recover (vs. die) (range: 0-1).","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/articles/yaml-configuration.html","id":"defining-parameters-with-distributions","dir":"Articles","previous_headings":"","what":"Defining Parameters with Distributions","title":"YAML Configuration for metaRVM","text":"Instead fixed values, can define disease parameters using statistical distributions. useful capturing uncertainty parameters. metaRVM supports uniform lognormal distributions. example defining ve, da, ds, dh distributions: uniform distribution, must specify min max values. lognormal distribution, must specify mu sd (mean standard deviation log scale).","code":"disease_params:   ts: 0.7   tv: 0.35   ve:     dist: uniform     min: 0.29     max: 0.53   dv: 158   dp: 1   de: 3   da:     dist: uniform     min: 3     max: 7   ds:     dist: uniform     min: 5     max: 7   dh:     dist: lognormal     mu: 8     sd: 8.9   dr: 187   pea: 0.333   psr: 0.95   phr: 0.97"},{"path":"https://RESUME-Epi.github.io/MetaRVM/articles/yaml-configuration.html","id":"specifying-subgroup-parameters","dir":"Articles","previous_headings":"","what":"Specifying Subgroup Parameters","title":"YAML Configuration for metaRVM","text":"metaRVM allows specify different disease parameters various demographic subgroups using sub_disease_params section. subgroup-specific parameters override global parameters defined disease_params. crucial demographic categories (e.g., age) specific values (e.g., 0-4, 5-11) used section exactly match corresponding columns values population mapping CSV file specified population_data. following example defines different parameters different age groups: configuration, individuals “0-4” age group dh (duration hospitalization) 4, overriding global dh value. Similarly, transmission rate ts “18-49” group set 0.01.","code":"sub_disease_params:     age:       0-4:         dh: 4         pea: 0.08         psr: 0.9303         phr: 0.9920       5-11:         dh: 4         pea: 0.08         psr: 0.9726         phr: 0.9920       12-17:         dh: 4         pea: 0.08         psr: 0.9726         phr: 0.9920       18-49:         ts: 0.01         dh: 6         pea: 0.12         psr: 0.9439         phr: 0.9690       50-64:         dh: 6         pea: 0.05         psr: 0.9894         phr: 0.9425       65+:         dh: 7         pea: 0.05         psr: 0.9091         phr: 0.9227"},{"path":"https://RESUME-Epi.github.io/MetaRVM/articles/yaml-configuration.html","id":"checkpointing-and-restoring-simulations","dir":"Articles","previous_headings":"","what":"Checkpointing and Restoring Simulations","title":"YAML Configuration for metaRVM","text":"long-running simulations, useful save state model intermediate points. known checkpointing. metaRVM allows save checkpoints restore simulation saved state.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/articles/yaml-configuration.html","id":"enabling-checkpointing","dir":"Articles","previous_headings":"Checkpointing and Restoring Simulations","what":"Enabling Checkpointing","title":"YAML Configuration for metaRVM","text":"enable checkpointing, need add checkpoint_dir optionally checkpoint_dates simulation_config section YAML file. checkpoint_dir: directory checkpoint files saved. checkpoint_dates: list dates (MM/DD/YYYY format) save checkpoint. provided, single checkpoint saved end simulation. example configure checkpointing:","code":"simulation_config:   start_date: 01/01/2025   length: 90   nsim: 10   random_seed: 42   checkpoint_dir: \"path/to/checkpoints\"   checkpoint_dates: [\"01/15/2025\", \"01/30/2025\"]"},{"path":"https://RESUME-Epi.github.io/MetaRVM/articles/yaml-configuration.html","id":"restoring-from-a-checkpoint","dir":"Articles","previous_headings":"Checkpointing and Restoring Simulations","what":"Restoring from a Checkpoint","title":"YAML Configuration for metaRVM","text":"restore simulation checkpoint file, use restore_from parameter simulation_config section. initialize model state saved specified checkpoint file. restoring, start_date correspond next date checkpoint, length remaining duration simulation. Note instance simulation must restored individually.","code":"simulation_config:   start_date: 01/30/2025 # Should be the next date of the checkpoint date   length: 60 # Remaining simulation length   nsim: 10   restore_from: \"path/to/checkpoints/checkpoint_2025-01-30_instance_1.Rda\""},{"path":"https://RESUME-Epi.github.io/MetaRVM/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Arindam Fadikar. Author, maintainer. Charles Macal. Author. Martinez Moyano Ignacio Javier. Contributor. Ozik Jonathan. Contributor.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Fadikar , Macal C (2025). MetaRVM: Meta-population compartmental model respiratory virus diseases. R package version 1.0.0, https://github.com/RESUME-Epi/MetaRVM, https://RESUME-Epi.github.io/MetaRVM/.","code":"@Manual{,   title = {MetaRVM: Meta-population compartmental model for respiratory virus diseases},   author = {Arindam Fadikar and Charles Macal},   year = {2025},   note = {R package version 1.0.0, https://github.com/RESUME-Epi/MetaRVM},   url = {https://RESUME-Epi.github.io/MetaRVM/}, }"},{"path":"https://RESUME-Epi.github.io/MetaRVM/index.html","id":"metarvm-","dir":"","previous_headings":"","what":"MetaRVM - Meta-population Respiratory Virus Model","title":"MetaRVM - Meta-population Respiratory Virus Model","text":"compartmental model simulation code generic respiratory virus diseases.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/index.html","id":"background","dir":"","previous_headings":"","what":"Background","title":"MetaRVM - Meta-population Respiratory Virus Model","text":"MetaRVM open-source R package modeling spread infectious diseases subpopulations, can flexibly defined geography, demographics, stratifications. designed support real-time public health decision-making. MetaRVM metapopulation model, extends classic Susceptible-Infected-Recovered (SIR) framework propagating infection across interacting subpopulations (e.g., age groups, neighborhoods), whose interactions governed realistic mixing patterns. MetaRVM model builds upon SEIR framework introducing additional compartments capture detailed dynamics disease progression, allowing heterogeneous mixing among different demographic stratum. generalizations allow model account factors vaccinations, hospitalizations, fatalities. details, please refer paper: Developing deploying use-inspired metapopulation modeling framework detailed tracking stratified health outcomes","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"MetaRVM - Meta-population Respiratory Virus Model","text":"Full documentation available : https://RESUME-Epi.github.io/MetaRVM/ Model schematics","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"MetaRVM - Meta-population Respiratory Virus Model","text":"can install development version MetaRVM GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"NSF-RESUME/MetaRVM\")"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/DEoptim_metaRVM.html","id":null,"dir":"Reference","previous_headings":"","what":"Calibrate MetaRVM using DEoptim — DEoptim_metaRVM","title":"Calibrate MetaRVM using DEoptim — DEoptim_metaRVM","text":"Wrapper DEoptim calibrate MetaRVM.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/DEoptim_metaRVM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calibrate MetaRVM using DEoptim — DEoptim_metaRVM","text":"","code":"DEoptim_metaRVM(config, ground_truth, params_to_infer, deoptim_settings)"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVM-package.html","id":null,"dir":"Reference","previous_headings":"","what":"MetaRVM: Meta-population compartmental model for respiratory virus diseases — MetaRVM-package","title":"MetaRVM: Meta-population compartmental model for respiratory virus diseases — MetaRVM-package","text":"comprehensive R package simulating respiratory virus epidemics using meta-population compartmental models. MetaRVM implements stochastic SEIRD (Susceptible-Exposed-Infected-Recovered-Dead) framework demographic stratification age, race, geographic zones. package supports complex epidemiological scenarios including asymptomatic presymptomatic transmission, hospitalization dynamics, vaccination campaigns, time-varying contact patterns. Key features include: (1) flexible YAML-based configuration system model parameters population data, (2) R6 class architecture structured data handling method chaining, (3) automated output formatting calendar dates demographic attributes, (4) comprehensive analysis methods data summarization across demographic categories, (5) intelligent visualization capabilities adaptive plotting based data structure, (6) support uncertainty quantification multiple stochastic simulation instances. package designed epidemiologists, public health researchers, policy makers need robust tools infectious disease modeling scenario analysis.","code":""},{"path":[]},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVM-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"MetaRVM: Meta-population compartmental model for respiratory virus diseases — MetaRVM-package","text":"Maintainer: Arindam Fadikar afadikar@anl.gov Authors: Charles Macal contributors: Martinez Moyano Ignacio Javier [contributor] Ozik Jonathan [contributor]","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMCheck.html","id":null,"dir":"Reference","previous_headings":"","what":"MetaRVM Checkpoint Class — MetaRVMCheck","title":"MetaRVM Checkpoint Class — MetaRVMCheck","text":"R6 class handle MetaRVM checkpoint data. class simplified version MetaRVMConfig tailored storing accessing simulation checkpoints.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMCheck.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MetaRVM Checkpoint Class — MetaRVMCheck","text":"MetaRVMCheck class designed hold state simulation specific time point, allowing continuation analysis. stores necessary parameters population states.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMCheck.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"MetaRVM Checkpoint Class — MetaRVMCheck","text":"Arindam Fadikar","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMCheck.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"MetaRVM Checkpoint Class — MetaRVMCheck","text":"MetaRVM::MetaRVMConfig -> MetaRVMCheck","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMCheck.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"MetaRVM Checkpoint Class — MetaRVMCheck","text":"check_data List containing parsed checkpoint data","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMCheck.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"MetaRVM Checkpoint Class — MetaRVMCheck","text":"MetaRVM::MetaRVMConfig$get() MetaRVM::MetaRVMConfig$get_age_categories() MetaRVM::MetaRVMConfig$get_all() MetaRVM::MetaRVMConfig$get_pop_map() MetaRVM::MetaRVMConfig$get_race_categories() MetaRVM::MetaRVMConfig$get_zones() MetaRVM::MetaRVMConfig$list_parameters() MetaRVM::MetaRVMConfig$parameter_summary() MetaRVM::MetaRVMConfig$print() MetaRVM::MetaRVMConfig$set()","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMCheck.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"MetaRVM Checkpoint Class — MetaRVMCheck","text":"MetaRVMCheck$new() MetaRVMCheck$clone()","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMCheck.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"MetaRVM Checkpoint Class — MetaRVMCheck","text":"Initialize new MetaRVMCheck object","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMCheck.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MetaRVM Checkpoint Class — MetaRVMCheck","text":"","code":"MetaRVMCheck$new(input)"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMCheck.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MetaRVM Checkpoint Class — MetaRVMCheck","text":"input list containing checkpoint data.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMCheck.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"MetaRVM Checkpoint Class — MetaRVMCheck","text":"new MetaRVMCheck object.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMCheck.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"MetaRVM Checkpoint Class — MetaRVMCheck","text":"objects class cloneable method.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMCheck.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"MetaRVM Checkpoint Class — MetaRVMCheck","text":"","code":"MetaRVMCheck$clone(deep = FALSE)"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMCheck.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"MetaRVM Checkpoint Class — MetaRVMCheck","text":"deep Whether make deep clone.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":null,"dir":"Reference","previous_headings":"","what":"MetaRVM Configuration Class — MetaRVMConfig","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"R6 class handle MetaRVM configuration data validation methods. class encapsulates configuration parameters needed MetaRVM simulations, providing methods parameter access, validation, introspection.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"MetaRVMConfig class stores parsed configuration data YAML files provides structured access simulation parameters. automatically validates configuration completeness provides convenient methods accessing demographic categories, population mappings, simulation settings.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"Arindam Fadikar","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"config_file Path original YAML config file (applicable) config_data List containing parsed configuration parameters","code":""},{"path":[]},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"MetaRVMConfig$new() MetaRVMConfig$get() MetaRVMConfig$get_all() MetaRVMConfig$list_parameters() MetaRVMConfig$parameter_summary() MetaRVMConfig$set() MetaRVMConfig$print() MetaRVMConfig$get_pop_map() MetaRVMConfig$get_age_categories() MetaRVMConfig$get_race_categories() MetaRVMConfig$get_zones() MetaRVMConfig$clone()","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"Initialize new MetaRVMConfig object","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"","code":"MetaRVMConfig$new(input)"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"input Either file path (character) parsed config list","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"New MetaRVMConfig object (invisible)","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"method-get-","dir":"Reference","previous_headings":"","what":"Method get()","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"Get configuration parameter","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"","code":"MetaRVMConfig$get(param)"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"param Parameter name","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"requested parameter value","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"method-get-all-","dir":"Reference","previous_headings":"","what":"Method get_all()","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"Get configuration parameters list","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"","code":"MetaRVMConfig$get_all()"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"Named list configuration parameters","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"method-list-parameters-","dir":"Reference","previous_headings":"","what":"Method list_parameters()","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"List available parameter names","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"","code":"MetaRVMConfig$list_parameters()"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"Character vector parameter names","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"method-parameter-summary-","dir":"Reference","previous_headings":"","what":"Method parameter_summary()","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"Show summary parameter types sizes","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"","code":"MetaRVMConfig$parameter_summary()"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"Data frame parameter information","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"method-set-","dir":"Reference","previous_headings":"","what":"Method set()","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"Set configuration parameter","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"","code":"MetaRVMConfig$set(param, value)"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"param Character string. Parameter name set value value assign parameter","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"Self (invisible) method chaining","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"Print summary configuration","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"","code":"MetaRVMConfig$print()"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"Self (invisible)","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"method-get-pop-map-","dir":"Reference","previous_headings":"","what":"Method get_pop_map()","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"Get population mapping data","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"","code":"MetaRVMConfig$get_pop_map()"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"data.table containing population mapping demographic categories","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"method-get-age-categories-","dir":"Reference","previous_headings":"","what":"Method get_age_categories()","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"Get available age categories","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"","code":"MetaRVMConfig$get_age_categories()"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"Character vector unique age categories, NULL population mapping available","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"method-get-race-categories-","dir":"Reference","previous_headings":"","what":"Method get_race_categories()","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"Get available race categories","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"","code":"MetaRVMConfig$get_race_categories()"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"Character vector unique race categories, NULL population mapping available","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"method-get-zones-","dir":"Reference","previous_headings":"","what":"Method get_zones()","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"Get available zones","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"","code":"MetaRVMConfig$get_zones()"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"Character vector unique zone identifiers, NULL population mapping available","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"objects class cloneable method.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"","code":"MetaRVMConfig$clone(deep = FALSE)"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"deep Whether make deep clone.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMConfig.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MetaRVM Configuration Class — MetaRVMConfig","text":"","code":"if (FALSE) { # \\dontrun{ # Initialize from YAML file config <- MetaRVMConfig$new(\"path/to/config.yaml\")  # Access parameters config$get(\"N_pop\") config$get(\"start_date\")  # Get demographic categories ages <- config$get_age_categories() races <- config$get_race_categories() zones <- config$get_zones() } # }"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMResults.html","id":null,"dir":"Reference","previous_headings":"","what":"MetaRVM Results Class — MetaRVMResults","title":"MetaRVM Results Class — MetaRVMResults","text":"R6 class handle MetaRVM simulation results comprehensive analysis visualization methods. class stores formatted simulation results provides methods data summarization, subsetting, visualization flexible demographic groupings.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMResults.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MetaRVM Results Class — MetaRVMResults","text":"MetaRVMResults class automatically formats raw simulation output upon initialization, converting time steps calendar dates adding demographic attributes. provides methods flexible data summarization across combination age, race, geographic zone categories, plus method chaining streamlined analysis workflows.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMResults.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"MetaRVM Results Class — MetaRVMResults","text":"Arindam Fadikar","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMResults.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"MetaRVM Results Class — MetaRVMResults","text":"config MetaRVMConfig object used generate results results data.table containing formatted simulation results run_info List containing run metadata","code":""},{"path":[]},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMResults.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"MetaRVM Results Class — MetaRVMResults","text":"MetaRVMResults$new() MetaRVMResults$print() MetaRVMResults$subset_data() MetaRVMResults$summarize() MetaRVMResults$clone()","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMResults.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"MetaRVM Results Class — MetaRVMResults","text":"Initialize new MetaRVMResults object","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMResults.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MetaRVM Results Class — MetaRVMResults","text":"","code":"MetaRVMResults$new(   raw_results,   config,   run_info = NULL,   formatted_results = NULL )"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MetaRVM Results Class — MetaRVMResults","text":"raw_results Raw simulation results data.table config MetaRVMConfig object used simulation run_info Optional metadata run formatted_results formatted simulation results data.table","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMResults.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"MetaRVM Results Class — MetaRVMResults","text":"New MetaRVMResults object (invisible)","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMResults.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"MetaRVM Results Class — MetaRVMResults","text":"Print summary results","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMResults.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"MetaRVM Results Class — MetaRVMResults","text":"","code":"MetaRVMResults$print()"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMResults.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"MetaRVM Results Class — MetaRVMResults","text":"Self (invisible)","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMResults.html","id":"method-subset-data-","dir":"Reference","previous_headings":"","what":"Method subset_data()","title":"MetaRVM Results Class — MetaRVMResults","text":"Subset data based combination parameters","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMResults.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"MetaRVM Results Class — MetaRVMResults","text":"","code":"MetaRVMResults$subset_data(   ages = NULL,   races = NULL,   zones = NULL,   disease_states = NULL,   date_range = NULL,   instances = NULL,   exclude_p_columns = TRUE )"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMResults.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"MetaRVM Results Class — MetaRVMResults","text":"ages Vector age categories include (default: ) races Vector race categories include (default: ) zones Vector zones include (default: ) disease_states Vector disease states include (default: , excludes p_ columns) date_range Vector two dates start_date, end_date filtering (default: ) instances Vector instance numbers include (default: ) exclude_p_columns Logical, whether exclude p_ columns (default: TRUE)","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMResults.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"MetaRVM Results Class — MetaRVMResults","text":"MetaRVMResults object subset results","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMResults.html","id":"method-summarize-","dir":"Reference","previous_headings":"","what":"Method summarize()","title":"MetaRVM Results Class — MetaRVMResults","text":"Summarize results across specified demographic characteristics","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMResults.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"MetaRVM Results Class — MetaRVMResults","text":"","code":"MetaRVMResults$summarize(   group_by,   disease_states = NULL,   date_range = NULL,   stats = c(\"mean\", \"median\", \"sd\"),   quantiles = c(0.25, 0.75),   exclude_p_columns = TRUE )"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMResults.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"MetaRVM Results Class — MetaRVMResults","text":"group_by Vector demographic variables group : c(\"age\", \"race\", \"zone\") disease_states Vector disease states include (default: , excludes p_ columns) date_range Optional date range filtering stats Vector statistics calculate: c(\"mean\", \"median\", \"sd\", \"min\", \"max\", \"sum\", \"quantile\"). NULL, returns instances quantiles Vector quantiles calculate \"quantile\" stats (default: c(0.25, 0.75)) exclude_p_columns Logical, whether exclude p_ columns (default: TRUE)","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMResults.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"MetaRVM Results Class — MetaRVMResults","text":"data.table summarized time series data instances stats = NULL","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMResults.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"MetaRVM Results Class — MetaRVMResults","text":"objects class cloneable method.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMResults.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"MetaRVM Results Class — MetaRVMResults","text":"","code":"MetaRVMResults$clone(deep = FALSE)"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMResults.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"MetaRVM Results Class — MetaRVMResults","text":"deep Whether make deep clone.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMResults.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MetaRVM Results Class — MetaRVMResults","text":"","code":"if (FALSE) { # \\dontrun{ # Create from simulation results results_obj <- MetaRVMResults$new(raw_results, config_obj)  # Access formatted results head(results_obj$results)  # Subset data with multiple filters subset_data <- results_obj$subset_data(   age = c(\"18-49\", \"50-64\"),    disease_states = c(\"H\", \"D\"),   date_range = c(as.Date(\"2024-01-01\"), as.Date(\"2024-02-01\")) )  # Method chaining for analysis and visualization results_obj$summarize(   group_by = c(\"age\", \"race\"),    stats = c(\"median\", \"quantile\"),   quantiles = c(0.25, 0.75) )$plot() } # }"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMSummary.html","id":null,"dir":"Reference","previous_headings":"","what":"MetaRVM Summary Class — MetaRVMSummary","title":"MetaRVM Summary Class — MetaRVMSummary","text":"R6 class summarized MetaRVM results plotting capabilities method chaining support. class stores summarized simulation data provides visualization methods automatically adapt based data structure grouping variables.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMSummary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MetaRVM Summary Class — MetaRVMSummary","text":"MetaRVMSummary class designed work seamlessly method chaining MetaRVMResults. stores either summary statistics (mean, median, quantiles, etc.) individual instance data, provides intelligent plotting methods automatically determine appropriate visualizations based data structure demographic groupings. class supports two data types: Summary data: Contains aggregated statistics across simulation instances Instance data: Contains individual trajectory data simulation instance Plotting behavior adapts automatically: Single grouping variable: Facets demographic category, colors disease state Two grouping variables: Grid layout demographics facet dimensions Three grouping variables: Grid layout first two facets, third color","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMSummary.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public Fields","title":"MetaRVM Summary Class — MetaRVMSummary","text":"data data.table containing summarized results config MetaRVMConfig object original simulation type Character string indicating data type (\"summary\" \"instances\")","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMSummary.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"MetaRVM Summary Class — MetaRVMSummary","text":"Arindam Fadikar","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMSummary.html","id":"public-fields-1","dir":"Reference","previous_headings":"","what":"Public fields","title":"MetaRVM Summary Class — MetaRVMSummary","text":"data Summarized data config Original MetaRVMConfig object type Type summary (\"instances\" \"summary\")","code":""},{"path":[]},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMSummary.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"MetaRVM Summary Class — MetaRVMSummary","text":"MetaRVMSummary$new() MetaRVMSummary$print() MetaRVMSummary$plot() MetaRVMSummary$clone()","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMSummary.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"MetaRVM Summary Class — MetaRVMSummary","text":"Initialize MetaRVMSummary object","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMSummary.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MetaRVM Summary Class — MetaRVMSummary","text":"","code":"MetaRVMSummary$new(data, config, type)"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMSummary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MetaRVM Summary Class — MetaRVMSummary","text":"data data.table containing summarized instance data config MetaRVMConfig object original simulation type Character string indicating data type (\"summary\" \"instances\")","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMSummary.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"MetaRVM Summary Class — MetaRVMSummary","text":"New MetaRVMSummary object (invisible)","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMSummary.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"MetaRVM Summary Class — MetaRVMSummary","text":"Print summary data object","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMSummary.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"MetaRVM Summary Class — MetaRVMSummary","text":"","code":"MetaRVMSummary$print()"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMSummary.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"MetaRVM Summary Class — MetaRVMSummary","text":"Self (invisible)","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMSummary.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"MetaRVM Summary Class — MetaRVMSummary","text":"Plot method shows median quantile bands","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMSummary.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"MetaRVM Summary Class — MetaRVMSummary","text":"","code":"MetaRVMSummary$plot(ci_level = 0.95, theme = theme_minimal(), title = NULL)"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMSummary.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"MetaRVM Summary Class — MetaRVMSummary","text":"ci_level Confidence level empirical quantiles (default: 0.95). used quantile columns pre-specified theme ggplot2 theme function (default: theme_minimal()) title Optional custom plot title","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMSummary.html","id":"details-1","dir":"Reference","previous_headings":"","what":"Details","title":"MetaRVM Summary Class — MetaRVMSummary","text":"method creates time series plots automatic layout adaptation based grouping variables: summary data: Shows median lines quantile confidence bands Automatically determines faceting strategy based number grouping variables Uses disease states color differentiation appropriate method requires specific data structure: Summary data must contain 'median_value' quantile columns (e.g., 'q25', 'q75') Instance data must contain 'instance' column individual trajectory grouping","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMSummary.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"MetaRVM Summary Class — MetaRVMSummary","text":"ggplot object","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMSummary.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"MetaRVM Summary Class — MetaRVMSummary","text":"objects class cloneable method.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMSummary.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"MetaRVM Summary Class — MetaRVMSummary","text":"","code":"MetaRVMSummary$clone(deep = FALSE)"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMSummary.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"MetaRVM Summary Class — MetaRVMSummary","text":"deep Whether make deep clone.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/MetaRVMSummary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MetaRVM Summary Class — MetaRVMSummary","text":"","code":"if (FALSE) { # \\dontrun{ # Typically created through method chaining summary_obj <- results$summarize(   group_by = c(\"age\", \"race\"),    stats = c(\"median\", \"quantile\"),   quantiles = c(0.25, 0.75) )  # Direct plotting summary_obj$plot()  # Plot with custom theme and confidence level summary_obj$plot(ci_level = 0.5, theme = theme_bw())  # Complete method chaining workflow results$summarize(group_by = \"age\", stats = c(\"median\", \"quantile\"))$plot() } # }"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/calibrate_metaRVM.html","id":null,"dir":"Reference","previous_headings":"","what":"Calibrate MetaRVM Parameters — calibrate_metaRVM","title":"Calibrate MetaRVM Parameters — calibrate_metaRVM","text":"master function calibrates MetaRVM model parameters using one several available optimization methods.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/calibrate_metaRVM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calibrate MetaRVM Parameters — calibrate_metaRVM","text":"","code":"calibrate_metaRVM(   config,   params_to_infer,   ground_truth,   method,   settings = list() )"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/calibrate_metaRVM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calibrate MetaRVM Parameters — calibrate_metaRVM","text":"config MetaRVMConfig object path YAML configuration file. params_to_infer named list defining parameters estimated, including bounds starting values. ground_truth data.table containing observational data. method optimization method use: \"optim\" \"DEoptim\". settings list settings chosen optimization method.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/calibrate_metaRVM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calibrate MetaRVM Parameters — calibrate_metaRVM","text":"results chosen optimization function.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/calibrate_metaRVM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calibrate MetaRVM Parameters — calibrate_metaRVM","text":"","code":"if (FALSE) { # \\dontrun{ # This is a conceptual example. # You would need a valid config object and ground truth data.  # 1. Load or create a configuration object config <- MetaRVMConfig$new(\"path/to/your/config.yaml\")  # 2. Define ground truth data (example structure) ground_truth <- data.table(   date = as.Date(\"2023-01-10\"),   age = \"18+\",   disease_state = \"I_symp\",   value = 150 )  # 3. Define parameters to infer with bounds and start values params_to_infer <- list(   ts = list(lower = 0.1, upper = 0.9, start = 0.5),   pea = list(lower = 0.2, upper = 0.8, start = 0.4) )  # 4. Calibrate using the 'optim' method optim_results <- calibrate_metaRVM(   config = config,   params_to_infer = params_to_infer,   ground_truth = ground_truth,   method = \"optim\",   settings = list(method = \"L-BFGS-B\", control = list(maxit = 100)) ) print(optim_results)  # 5. Calibrate using the 'DEoptim' method deoptim_results <- calibrate_metaRVM(   config = config,   params_to_infer = params_to_infer,   ground_truth = ground_truth,   method = \"DEoptim\",   settings = list(itermax = 50) ) print(deoptim_results) } # }"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/draw_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to draw samples for distributional parameters — draw_sample","title":"Function to draw samples for distributional parameters — draw_sample","text":"Function draw samples distributional parameters","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/draw_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to draw samples for distributional parameters — draw_sample","text":"","code":"draw_sample(config_list, N_pop, seed = NULL)"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/draw_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to draw samples for distributional parameters — draw_sample","text":"config_list list configurations N_pop Number subpopulations seed","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/draw_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to draw samples for distributional parameters — draw_sample","text":"random sample drawn distribution specified dist component","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/format_metarvm_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Format MetaRVM simulation output — format_metarvm_output","title":"Format MetaRVM simulation output — format_metarvm_output","text":"function formats raw MetaRVM simulation output : Converting time steps calendar dates Adding demographic attributes population mapping Handling different disease states appropriately: Regular states (S, E, , etc.): Keep values integer time points New count states (n_ prefix): Sum pairs get daily counts","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/format_metarvm_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format MetaRVM simulation output — format_metarvm_output","text":"","code":"format_metarvm_output(sim_output, config)"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/format_metarvm_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format MetaRVM simulation output — format_metarvm_output","text":"sim_output data.table containing raw simulation output config MetaRVMConfig object config list containing parameters","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/format_metarvm_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format MetaRVM simulation output — format_metarvm_output","text":"data.table formatted output including calendar dates demographics","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/grapes-or-or-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"NULL Coalescing Operator — grapes-or-or-grapes","title":"NULL Coalescing Operator — grapes-or-or-grapes","text":"Returns left-hand side NULL, otherwise returns right-hand side. utility function used internally MetaRVM classes.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/grapes-or-or-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NULL Coalescing Operator — grapes-or-or-grapes","text":"","code":"x %||% y"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/grapes-or-or-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NULL Coalescing Operator — grapes-or-or-grapes","text":"x Left-hand side value y Right-hand side value (default/fallback)","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/grapes-or-or-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NULL Coalescing Operator — grapes-or-or-grapes","text":"x x NULL, otherwise y","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/grapes-or-or-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NULL Coalescing Operator — grapes-or-or-grapes","text":"","code":"if (FALSE) { # \\dontrun{ # Internal usage in classes title <- user_title %||% \"Default Title\" } # }"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/metaRVM.html","id":null,"dir":"Reference","previous_headings":"","what":"Run MetaRVM Epidemic Simulation — metaRVM","title":"Run MetaRVM Epidemic Simulation — metaRVM","text":"Executes meta-population compartmental epidemic model simulation using specified configuration parameters. function runs multiple simulation instances stochastic parameter variations returns formatted results calendar dates demographic attributes comprehensive analysis visualization.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/metaRVM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run MetaRVM Epidemic Simulation — metaRVM","text":"","code":"metaRVM(config_input)"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/metaRVM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run MetaRVM Epidemic Simulation — metaRVM","text":"config_input Configuration input one three formats: Character string: File path YAML configuration file MetaRVMConfig object: Pre-initialized configuration object Named list: Parsed configuration data parse_config","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/metaRVM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run MetaRVM Epidemic Simulation — metaRVM","text":"Returns MetaRVMResults object containing: results Formatted data.table columns: config Original MetaRVMConfig object run_info Simulation metadata including date range, instance count returned object supports method chaining analysis: subset_data(): Filter demographics, disease states, dates summarize(): Aggregate across demographic categories statistics plot(): Create time series visualizations (via method chaining)","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/metaRVM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run MetaRVM Epidemic Simulation — metaRVM","text":"MetaRVM simulation implements meta-population SEIRD (Susceptible-Exposed-Infected-Recovered-Dead) compartmental model additional complexity asymptomatic presymptomatic infections, hospitalization states, vaccination dynamics. model accounts : Compartmental Structure: S: Susceptible individuals E: Exposed (incubating) individuals I_asymp: Asymptomatic infectious individuals I_presymp: Presymptomatic infectious individuals I_symp: Symptomatic infectious individuals H: Hospitalized individuals R: Recovered individuals D: Dead individuals P: Protected/vaccinated individuals Model Features: Multiple population groups demographic stratification (age, race, geography) Time-varying contact patterns (weekday/weekend, day/night mixing matrices) Stochastic parameter variations across simulation instances Vaccination schedules time-varying administration Checkpointing capability long simulations Disease Parameters: model uses following key parameters (can stochastic across instances): ts: Transmission rate symptomatic individuals tv: Transmission rate vaccinated individuals ve: Vaccine effectiveness de, dp, da, ds, dh, dr: Duration parameters disease states pea, psr, phr: Probability parameters state transitions Simulation Process: simulation instance, function: Initializes population compartments configuration Applies instance-specific stochastic parameter values Runs ODE solver (meta_sim) specified time steps Collects output time points populations Combines results across instances Formats output calendar dates demographic information Returns structured MetaRVMResults object analysis","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/metaRVM.html","id":"configuration-requirements","dir":"Reference","previous_headings":"","what":"Configuration Requirements","title":"Run MetaRVM Epidemic Simulation — metaRVM","text":"configuration must include: Population data: Initial compartment values, demographic mapping Disease parameters: Transmission rates, durations, probabilities Contact matrices: Weekday/weekend day/night mixing patterns Simulation settings: Start date, length, number instances Vaccination schedule: Time-varying vaccination rates (optional)","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/metaRVM.html","id":"performance-notes","dir":"Reference","previous_headings":"","what":"Performance Notes","title":"Run MetaRVM Epidemic Simulation — metaRVM","text":"Simulation time scales nsim × nsteps × N_pop Large population numbers long time periods may require substantial memory Consider checkpointing (do_chk = TRUE) long simulations Output formatting adds overhead provides analysis-ready data structure","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/metaRVM.html","id":"error-handling","dir":"Reference","previous_headings":"","what":"Error Handling","title":"Run MetaRVM Epidemic Simulation — metaRVM","text":"function validates input configuration stop informative messages : Invalid config_input type format Missing required configuration parameters Inconsistent population parameter dimensions File access issues configuration checkpoint files","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/metaRVM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Run MetaRVM Epidemic Simulation — metaRVM","text":"Fadikar, ., et al. \"Developing deploying use-inspired metapopulation modeling framework detailed tracking stratified health outcomes\"","code":""},{"path":[]},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/metaRVM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Run MetaRVM Epidemic Simulation — metaRVM","text":"Arindam Fadikar, Charles Macal, Ignacio Martinez-Moyano, Jonathan Ozik","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/metaRVM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run MetaRVM Epidemic Simulation — metaRVM","text":"","code":"if (FALSE) { # \\dontrun{ # Basic usage with YAML configuration file results <- metaRVM(\"path/to/config.yaml\")  # Print summary results  # Access formatted data directly head(results$results)  # Method chaining for analysis and visualization results$summarize(   group_by = c(\"age\", \"race\"),   stats = c(\"median\", \"quantile\"),   disease_states = c(\"H\", \"D\") )$plot()  # Subset and analyze specific populations subset_results <- results$subset_data(   age = c(\"65+\"),   disease_states = c(\"H\", \"D\"),   date_range = c(as.Date(\"2024-01-01\"), as.Date(\"2024-03-01\")) )  # Using with pre-parsed configuration config <- parse_config(\"config.yaml\") config_obj <- MetaRVMConfig$new(config) results <- metaRVM(config_obj)  # Accessing run metadata results$run_info$n_instances results$run_info$date_range } # }"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/meta_infer.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Bayesian Inference for MetaRVM Parameters — meta_infer","title":"Perform Bayesian Inference for MetaRVM Parameters — meta_infer","text":"function calibrates specified MetaRVM model parameters ground truth observational data using Bayesian framework provided RobustCalibration package.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/meta_infer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Bayesian Inference for MetaRVM Parameters — meta_infer","text":"","code":"meta_infer(config, params_to_infer, ground_truth, mcmc_settings)"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/meta_infer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Bayesian Inference for MetaRVM Parameters — meta_infer","text":"config MetaRVMConfig object path YAML configuration file. params_to_infer named list defining prior distributions parameters estimated. ground_truth data.table containing observational data. Must include date, age, disease_state, value columns age-specific calibration. mcmc_settings list settings MCMC sampler, iter burnin.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/meta_infer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Bayesian Inference for MetaRVM Parameters — meta_infer","text":"object rcalibration containing MCMC posterior samples.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/meta_objective_function.html","id":null,"dir":"Reference","previous_headings":"","what":"MetaRVM Objective Function for Optimization — meta_objective_function","title":"MetaRVM Objective Function for Optimization — meta_objective_function","text":"internal function serves objective function optimization routines. runs deterministic MetaRVM simulation given set parameters calculates Sum Squared Errors (SSE) simulation output ground truth data.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/meta_objective_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MetaRVM Objective Function for Optimization — meta_objective_function","text":"","code":"meta_objective_function(params, config, ground_truth)"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/meta_objective_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MetaRVM Objective Function for Optimization — meta_objective_function","text":"params named vector parameter values evaluated. config MetaRVMConfig object path YAML configuration file. ground_truth data.table observational data.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/meta_objective_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MetaRVM Objective Function for Optimization — meta_objective_function","text":"Sum Squared Errors (SSE) single numeric value.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/meta_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"Metapopulation Respiratory Virus Model Simulator — meta_sim","title":"Metapopulation Respiratory Virus Model Simulator — meta_sim","text":"core simulation engine implements stochastic compartmental SEIRD (Susceptible-Exposed-Infected-Recovered-Dead) model respiratory virus epidemics across multiple demographic subpopulations. function compiles executes ODIN-based differential equation model time-varying contact patterns, vaccination dynamics, complex disease progression pathways.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/meta_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metapopulation Respiratory Virus Model Simulator — meta_sim","text":"","code":"meta_sim(   N_pop,   ts,   tv,   S0,   I0,   P0,   R0,   H0 = rep(0, N_pop),   D0 = rep(0, N_pop),   Ia0 = rep(0, N_pop),   Ip0 = rep(0, N_pop),   E0 = rep(0, N_pop),   m_weekday_day,   m_weekday_night,   m_weekend_day,   m_weekend_night,   delta_t,   vac_mat,   dv,   de,   pea,   dp,   da,   ds,   psr,   dh,   phr,   dr,   ve,   nsteps,   is.stoch = FALSE,   seed = NULL,   do_chk = FALSE,   chk_time_steps = NULL,   chk_file_names = NULL )"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/meta_sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metapopulation Respiratory Virus Model Simulator — meta_sim","text":"N_pop Integer. Number demographic subpopulations model ts Numeric vector scalar. Transmission rate symptomatic individuals susceptible population. scalar, applied subpopulations tv Numeric vector scalar. Transmission rate symptomatic individuals vaccinated population. scalar, applied subpopulations S0 Numeric vector length N_pop. Initial number susceptible individuals subpopulation I0 Numeric vector length N_pop. Initial number symptomatic infected individuals subpopulation P0 Numeric vector length N_pop. Total population sizes subpopulation R0 Numeric vector length N_pop. Initial number recovered individuals subpopulation H0 Numeric vector length N_pop. Initial number hospitalized individuals subpopulation (default: rep(0, N_pop)) D0 Numeric vector length N_pop. Initial number deceased individuals subpopulation (default: rep(0, N_pop)) Ia0 Numeric vector length N_pop. Initial number asymptomatic infected individuals subpopulation (default: rep(0, N_pop)) Ip0 Numeric vector length N_pop. Initial number presymptomatic infected individuals subpopulation (default: rep(0, N_pop)) E0 Numeric vector length N_pop. Initial number exposed individuals subpopulation (default: rep(0, N_pop)) m_weekday_day Numeric matrix (N_pop × N_pop). Contact mixing matrix weekday daytime (6 - 6 PM) interactions m_weekday_night Numeric matrix (N_pop × N_pop). Contact mixing matrix weekday nighttime (6 PM - 6 ) interactions m_weekend_day Numeric matrix (N_pop × N_pop). Contact mixing matrix weekend daytime (6 - 6 PM) interactions m_weekend_night Numeric matrix (N_pop × N_pop). Contact mixing matrix weekend nighttime (6 PM - 6 ) interactions delta_t Positive numeric. Discrete time increment days (typically 0.5) vac_mat Numeric matrix. Vaccination schedule dimensions (nsteps × (1 + N_pop)). First column contains time indices, remaining columns contain vaccination counts subpopulation time step dv Numeric vector scalar. Mean duration (days) vaccinated state immunity waning. scalar, applied subpopulations de Numeric vector scalar. Mean duration (days) exposed state. scalar, applied subpopulations pea Numeric vector scalar. Proportion exposed individuals becoming asymptomatic infectious (vs. presymptomatic). Range: (0,1). scalar, applied subpopulations dp Numeric vector scalar. Mean duration (days) presymptomatic infectious state. scalar, applied subpopulations da Numeric vector scalar. Mean duration (days) asymptomatic infectious state. scalar, applied subpopulations ds Numeric vector scalar. Mean duration (days) symptomatic infectious state. scalar, applied subpopulations psr Numeric vector scalar. Proportion symptomatic individuals recovering directly (vs. hospitalization). Range: (0,1). scalar, applied subpopulations dh Numeric vector scalar. Mean duration (days) hospitalized state. scalar, applied subpopulations phr Numeric vector scalar. Proportion hospitalized individuals recovering (vs. death). Range: (0,1). scalar, applied subpopulations dr Numeric vector scalar. Mean duration (days) immunity recovered state. scalar, applied subpopulations ve Numeric vector scalar. Vaccine effectiveness (proportion). Range: 0,1. scalar, applied subpopulations nsteps Integer. Total number discrete time evolution steps simulation .stoch Logical. Whether run stochastic simulation (TRUE) deterministic simulation (FALSE). Default: FALSE seed Integer NULL. Random seed reproducibility. used .stoch = TRUE. Default: NULL do_chk Logical. Whether save model checkpoint simulation end. Default: FALSE chk_time_steps Integer vector NULL. Time steps save checkpoints. chk_file_names List character vectors NULL. File names checkpoints. element list corresponds time step chk_time_steps.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/meta_sim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metapopulation Respiratory Virus Model Simulator — meta_sim","text":"Returns data.table following structure: step Integer time step index (0 nsteps) time Continuous simulation time (step × delta_t) disease_state Character vector compartment names population_id Character vector subpopulation identifiers value Numeric values representing population counts compartment Available disease states output: Core compartments: S, E, I_presymp, I_asymp, I_symp, H, R, D, V, P Derived outputs: I_all (total infectious), cum_V (cumulative vaccinations) Transition flows: n_SE, n_EI, n_HR, n_HD, etc. (new infections, hospitalizations, deaths) Debug outputs: p_SE, p_VE, I_eff (probabilities effective populations)","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/meta_sim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Metapopulation Respiratory Virus Model Simulator — meta_sim","text":"model implements complex epidemiological framework following features: Compartmental Structure: S: Susceptible individuals E: Exposed (incubating) individuals I_presymp: Presymptomatic infectious individuals I_asymp: Asymptomatic infectious individuals I_symp: Symptomatic infectious individuals H: Hospitalized individuals R: Recovered individuals D: Deceased individuals V: Vaccinated individuals P: Total living population (excludes deaths) Disease Progression Pathways: S → E: Exposure contact infectious individuals E → I_asymp/I_presymp: Progression infectious states (proportion pea) I_presymp → I_symp: Development symptoms I_asymp → R: Direct recovery asymptomatic state I_symp → R/H: Recovery hospitalization (proportion psr) H → R/D: Hospital discharge death (proportion phr) R → S: Loss immunity S → V: Vaccination V → S/E: Vaccine waning breakthrough infection Mixing Patterns: Contact patterns vary : Day week: Weekday vs. weekend patterns Time day: Day (6 - 6 PM) vs. night (6 PM - 6 ) patterns pattern specified N_pop × N_pop contact matrix Force Infection: Transmission occurs contact susceptible/vaccinated individuals infectious compartments (I_presymp + I_asymp + I_symp), modified : Population-specific transmission rates (ts, tv) Time-varying contact patterns Vaccine effectiveness breakthrough infections Stochastic vs. Deterministic Mode: Deterministic: Uses exact differential equations Stochastic: Adds demographic stochasticity via binomial draws Vaccination Implementation: Vaccination implemented time-varying input : Scheduled vaccination counts per time step subpopulation Vaccine effectiveness reducing infection probability Waning immunity returning individuals susceptible state","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/meta_sim.html","id":"parameter-scaling","dir":"Reference","previous_headings":"","what":"Parameter Scaling","title":"Metapopulation Respiratory Virus Model Simulator — meta_sim","text":"duration parameters automatically converted rates (1/duration). Scalar parameters automatically expanded vectors length N_pop. allows flexible specification homogeneous heterogeneous parameters.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/meta_sim.html","id":"checkpointing","dir":"Reference","previous_headings":"","what":"Checkpointing","title":"Metapopulation Respiratory Virus Model Simulator — meta_sim","text":"do_chk = TRUE, function saves checkpoint file containing: Final compartment states simulation continuation model parameters reproducibility Vaccination schedule data Population structure information","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/meta_sim.html","id":"performance-considerations","dir":"Reference","previous_headings":"","what":"Performance Considerations","title":"Metapopulation Respiratory Virus Model Simulator — meta_sim","text":"Runtime scales approximately O(N_pop² × nsteps) Memory usage increases output frequency population complexity Stochastic mode adds computational overhead random number generation Large contact matrices (high N_pop) significantly impact performance","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/meta_sim.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Metapopulation Respiratory Virus Model Simulator — meta_sim","text":"ODIN package: https://mrc-ide.github.io/odin/ Fadikar, ., et al. \"Developing deploying use-inspired metapopulation modeling framework detailed tracking stratified health outcomes\"","code":""},{"path":[]},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/meta_sim.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Metapopulation Respiratory Virus Model Simulator — meta_sim","text":"Arindam Fadikar, Charles Macal, Ignacio Martinez-Moyano, Jonathan Ozik","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/meta_sim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metapopulation Respiratory Virus Model Simulator — meta_sim","text":"","code":"if (FALSE) { # \\dontrun{ # Basic deterministic simulation N_pop <- 30 nsteps <- 400  # Initialize populations S0 <- rep(1000, N_pop) I0 <- rep(10, N_pop) P0 <- S0 + I0 R0 <- rep(0, N_pop)  # Contact matrices (simplified - identity matrices) contact_matrix <- diag(N_pop) * 0.1  # Basic vaccination schedule (no vaccination) vac_mat <- matrix(0, nrow = nsteps + 1, ncol = N_pop + 1) vac_mat[, 1] <- 0:nsteps  # Run simulation results <- meta_sim(   N_pop = N_pop,   ts = 0.5,   tv = 0.1,   S0 = S0,   I0 = I0,   P0 = P0,   R0 = R0,   m_weekday_day = contact_matrix,   m_weekday_night = contact_matrix * 0.5,   m_weekend_day = contact_matrix * 0.8,   m_weekend_night = contact_matrix * 0.3,   delta_t = 0.5,   vac_mat = vac_mat,   dv = 365,   de = 3,   pea = 0.3,   dp = 2,   da = 7,   ds = 7,   psr = 0.95,   dh = 10,   phr = 0.9,   dr = 180,   ve = 0.8,   nsteps = nsteps )  # Stochastic simulation with checkpointing results_stoch <- meta_sim(   # ... same parameters as above ...   is.stoch = TRUE,   seed = 12345,   do_chk = TRUE,   chk_file_name = \"simulation_checkpoint.rds\" ) } # }"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/optim_metaRVM.html","id":null,"dir":"Reference","previous_headings":"","what":"Calibrate MetaRVM using optim — optim_metaRVM","title":"Calibrate MetaRVM using optim — optim_metaRVM","text":"Wrapper optim calibrate MetaRVM.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/optim_metaRVM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calibrate MetaRVM using optim — optim_metaRVM","text":"","code":"optim_metaRVM(config, ground_truth, params_to_infer, optim_settings)"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/parse_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse MetaRVM Configuration File — parse_config","title":"Parse MetaRVM Configuration File — parse_config","text":"Reads parses YAML configuration file MetaRVM simulations, extracting necessary parameters epidemic modeling including population data, disease parameters, mixing matrices, vaccination schedules, simulation settings.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/parse_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse MetaRVM Configuration File — parse_config","text":"","code":"parse_config(config_file, return_object = FALSE)"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/parse_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse MetaRVM Configuration File — parse_config","text":"config_file Character string. Path YAML configuration file containing model parameters settings. return_object Logical. TRUE, returns MetaRVMConfig object method chaining enhanced functionality. FALSE (default), returns named list backward compatibility.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/parse_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse MetaRVM Configuration File — parse_config","text":"return_object = FALSE (default), returns named list containing: N_pop Number population groups pop_map Data.table population mapping demographics S_ini, E_ini, I_asymp_ini, I_presymp_ini, I_symp_ini, H_ini, D_ini, P_ini, V_ini, R_ini Initial compartment populations vac_time_id, vac_counts, vac_mat Vaccination schedule data m_wd_d, m_wd_n, m_we_d, m_we_n Contact mixing matrices ts, tv, ve, dv, de, dp, da, ds, dh, dr, pea, psr, phr Disease parameter matrices (nsim × N_pop) start_date Simulation start date Date object sim_length Simulation length days nsim Number simulation instances random_seed Random seed used () delta_t Time step size (fixed 0.5) chk_file_names, chk_time_steps, do_chk Checkpointing configuration return_object = TRUE, returns MetaRVMConfig object methods parameter access validation.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/parse_config.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parse MetaRVM Configuration File — parse_config","text":"function processes comprehensive YAML configuration file following main sections: Simulation Configuration: random_seed: Optional random seed reproducibility nsim: Number simulation instances (default: 1) start_date: Simulation start date MM/DD/YYYY format length: Simulation length days checkpoint_dir: Optional checkpoint directory saving intermediate results checkpoint_dates: Optional list dates save checkpoints. restore_from: Optional path restore simulation checkpoint Population Data: mapping: CSV file path containing population mapping demographic categories initialization: CSV file initial population states (S0, I0, V0, R0, N) vaccination: CSV file vaccination schedule time Mixing Matrices: Contact matrices different time periods: weekday_day, weekday_night: Weekday contact patterns weekend_day, weekend_night: Weekend contact patterns Disease Parameters: Epidemiological parameters (can scalars distributions): ts: Transmission rate symptomatic individuals tv: Transmission rate vaccinated individuals ve: Vaccine effectiveness de, dp, da, ds, dh, dr: Duration parameters different disease states pea, psr, phr: Probability parameters disease transitions Sub-population Parameters: sub_disease_params allows specification different parameter values specific demographic categories (e.g., age groups, races). function supports stochastic parameters distribution specifications dist, mu, sd, shape, rate, etc.","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/parse_config.html","id":"parameter-distributions","dir":"Reference","previous_headings":"","what":"Parameter Distributions","title":"Parse MetaRVM Configuration File — parse_config","text":"Disease parameters can specified distributions stochastic modeling: lognormal: dist: \"lognormal\", mu: value, sd: value gamma: dist: \"gamma\", shape: value, rate: value uniform: dist: \"uniform\", min: value, max: value beta: dist: \"beta\", shape1: value, shape2: value gaussian: dist: \"gaussian\", mean: value, sd: value","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/parse_config.html","id":"file-requirements","dir":"Reference","previous_headings":"","what":"File Requirements","title":"Parse MetaRVM Configuration File — parse_config","text":"Population mapping file must contain columns: population_id: Unique identifier population group age: Age category (e.g., \"0-4\", \"5-11\", \"12-17\", \"18-49\", \"50-64\", \"65+\") race: Race/ethnicity category hcez: Geographic zone identifier Population initialization file must contain: N (total population), S0, I0, V0, R0 (initial compartment counts) Vaccination file must contain: date (MM/DD/YYYY format) vaccination counts population group","code":""},{"path":[]},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/parse_config.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parse MetaRVM Configuration File — parse_config","text":"Arindam Fadikar","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/parse_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse MetaRVM Configuration File — parse_config","text":"","code":"if (FALSE) { # \\dontrun{ # Parse configuration file and return list (backward compatible) config <- parse_config(\"path/to/config.yaml\")  # Parse and return MetaRVMConfig object for method chaining config_obj <- parse_config(\"path/to/config.yaml\", return_object = TRUE)  # Access parameters from config object config_obj$get(\"N_pop\") config_obj$list_parameters()  # Use with MetaRVM simulation results <- metaRVM(config_obj) } # }"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/process_vac_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and prepare vaccination data — process_vac_data","title":"Read and prepare vaccination data — process_vac_data","text":"function takes vaccination schedule given data.table prepares according required structure needed meta_sim() function","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/process_vac_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and prepare vaccination data — process_vac_data","text":"","code":"process_vac_data(vac_dt, sim_start_date, sim_length, delta_t)"},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/process_vac_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and prepare vaccination data — process_vac_data","text":"vac_dt data.table vaccination schedule sim_start_date calendar date format yyyy-mm-dd sim_length Number calendar days simulation runs delta_t Step size simulation","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/process_vac_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and prepare vaccination data — process_vac_data","text":"data.table","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/run_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch the Shiny App — run_app","title":"Launch the Shiny App — run_app","text":"Launch Shiny App","code":""},{"path":"https://RESUME-Epi.github.io/MetaRVM/reference/run_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch the Shiny App — run_app","text":"","code":"run_app()"},{"path":"https://RESUME-Epi.github.io/MetaRVM/news/index.html","id":"metarvm-100","dir":"Changelog","previous_headings":"","what":"MetaRVM 1.0.0","title":"MetaRVM 1.0.0","text":"Initial CRAN submission.","code":""}]
